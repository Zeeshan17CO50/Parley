{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/linux/Desktop/My Desktop/Programming/nodejs/Parley/app/screen/VideoCamera.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Camera } from 'expo-camera';\nimport { FontAwesome, AntDesign, MaterialIcons } from '@expo/vector-icons';\n\nfunction VideoCamera(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"camera-party-mode\",\n    size: 30,\n    color: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  },\n  record: {\n    padding: 10,\n    width: 80,\n    height: 80,\n    borderWidth: 6,\n    borderColor: '#8c1227',\n    borderRadius: 40,\n    alignSelf: 'center',\n    bottom: '5%',\n    position: 'absolute',\n    backgroundColor: '#fe2b54'\n  }\n});\nexport default VideoCamera;","map":{"version":3,"sources":["/home/linux/Desktop/My Desktop/Programming/nodejs/Parley/app/screen/VideoCamera.js"],"names":["React","useState","useEffect","Camera","FontAwesome","AntDesign","MaterialIcons","VideoCamera","props","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","styles","container","camera","buttonContainer","button","front","StyleSheet","create","flex","backgroundColor","flexDirection","margin","alignSelf","alignItems","text","fontSize","color","record","padding","width","height","borderWidth","borderColor","borderRadius","bottom","position"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport {FontAwesome,AntDesign, MaterialIcons} from '@expo/vector-icons';\n\nfunction VideoCamera(props) {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [type, setType] = useState(Camera.Constants.Type.back);\n\n    useEffect(() => {\n        (async () => {\n          const { status } = await Camera.requestPermissionsAsync();\n          setHasPermission(status === 'granted');\n        })();\n      }, []);\n\n    if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={styles.container}>\n        <Camera style={styles.camera} type={type}>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={styles.button}\n              onPress={() => {\n                setType(\n                  type === Camera.Constants.Type.back\n                    ? Camera.Constants.Type.front\n                    : Camera.Constants.Type.back\n                );\n              }}>\n              <MaterialIcons name=\"camera-party-mode\" size={30} color={'white'}/>\n            </TouchableOpacity>\n          </View>\n        </Camera>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n      },\n      camera: {\n        flex: 1,\n      },\n      buttonContainer: {\n        flex: 1,\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n        margin: 20,\n      },\n      button: {\n        flex: 0.1,\n        alignSelf: 'flex-end',\n        alignItems: 'center',\n      },\n      text: {\n        fontSize: 18,\n        color: 'white',\n      },\n    record:{\n        padding: 10,\n        width: 80,\n        height: 80,\n        borderWidth: 6,\n        borderColor: '#8c1227',\n        borderRadius: 40,\n        alignSelf: 'center',\n        bottom: '5%',\n        position: 'absolute',\n        backgroundColor: '#fe2b54',\n    }\n})\n\nexport default VideoCamera;"]},"metadata":{},"sourceType":"module"}